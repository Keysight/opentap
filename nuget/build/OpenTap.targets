<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <OpenTapAutogeneratedMsBuildReferenceFile>$(MSBuildProjectDirectory)/obj/$(MSBuildProjectName).opentap.g.props</OpenTapAutogeneratedMsBuildReferenceFile>
    <IsWindows Condition=" '$(OS)' == 'Unix' ">false</IsWindows>
    <IsWindows Condition=" '$(OS)' != 'Unix' ">true</IsWindows>
    <IsX86 Condition=" '$(PlatformTarget)' == 'x86' ">true</IsX86>
    <IsX86 Condition=" '$(PlatformTarget)' != 'x86' ">false</IsX86>
    <OpenTapRuntimeDir Condition="$(IsX86) And $(IsWindows) ">$(MSBuildThisFileDirectory)runtimes\win-x86</OpenTapRuntimeDir>
    <OpenTapRuntimeDir Condition=" '$(IsX86)' == 'false' And $(IsWindows) ">$(MSBuildThisFileDirectory)runtimes\win-x64</OpenTapRuntimeDir>
    <OpenTapRuntimeDir Condition=" '$(IsX86)' == 'false' And '$(IsWindows)' == 'false' ">$(MSBuildThisFileDirectory)runtimes\linux-x64</OpenTapRuntimeDir>
  </PropertyGroup>

  <ImportGroup Condition="'$(ExcludeRestorePackageImports)' != 'true'">
    <Import Project="$(OpenTapAutogeneratedMsBuildReferenceFile)" Condition="Exists('$(OpenTapAutogeneratedMsBuildReferenceFile)')"/>
  </ImportGroup>

  <Target Name="VerifyRuntime" BeforeTargets="Build">
    <Error Condition=" '$(OpenTapRuntimeDir)' == '' "
           Text="$(PlatformTarget) builds are not supported on $(OS)."/>
  </Target>

  <!-- Payload for runtime -->
  <ItemGroup Condition=" '$(OpenTapRuntimeDir)' != '' ">
    <PackagePayloadFiles Include="$(OpenTapRuntimeDir)\**\*"/>
  </ItemGroup>

  <Target Name="CopyOpenTapPayloadFiles"
          Condition="'$(CopyOpenTapPayloadFiles)' != 'false' And
                     '$(OutDir)' != '' And
                     HasTrailingSlash('$(OutDir)') And
                     Exists('$(OutDir)')"
          Inputs="@(PackagePayloadFiles)"
          Outputs="@(PackagePayloadFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')"
          BeforeTargets="Build;PostBuildEvent">
    <Copy SourceFiles="@(PackagePayloadFiles)"
          DestinationFiles="@(PackagePayloadFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')"/>
  </Target>

  <Target Name="CleanOpenTapPayloadFiles"
          Condition="'$(CleanOpenTapPayloadFiles)' != 'false' And
                     '$(OutDir)' != '' And
                     HasTrailingSlash('$(OutDir)') And
                     Exists('$(OutDir)')"
          BeforeTargets="Clean">
    <ItemGroup>
      <PackagePayloadFilesToClean Include="@(PackagePayloadFiles -> '$(OutDir)%(RecursiveDir)%(Filename)%(Extension)')"/>
    </ItemGroup>
    <Delete Files="@(PackagePayloadFilesToClean);$(OutDir).InstallRan"/>
  </Target>

  <Target Name="CreateOpenTapPackage"
          Condition="'$(CreateOpenTapPackage)' != 'false' And
                     '$(OutDir)' != '' And
                     Exists('$(OutDir)') And
                     '$(OpenTapPackageDefinitionPath)' != '' And
                     Exists('$(OpenTapPackageDefinitionPath)')"
          AfterTargets="Build">
    <Exec Command=".\tap package create &quot;$(ProjectDir)\$(OpenTapPackageDefinitionPath)&quot;"
          Condition="'$(InstallCreatedOpenTapPackage)' != 'true'"
          WorkingDirectory="$(OutDir)" LogStandardErrorAsError="$(IsWindows)"/>
    <Exec Command=".\tap package create &quot;$(ProjectDir)\$(OpenTapPackageDefinitionPath)&quot; --install"
          Condition="'$(InstallCreatedOpenTapPackage)' == 'true'"
          WorkingDirectory="$(OutDir)" LogStandardErrorAsError="$(IsWindows)"/>
  </Target>

  <Target Name="ProcessOpenTapPackageList">
    <ItemGroup>
      <OpenTapPackagesToInstall Include="@(AdditionalOpenTapPackage)">
        <Version>%(AdditionalOpenTapPackage.Version)</Version>
        <Repository>%(AdditionalOpenTapPackage.Repository)</Repository>
        <UnpackOnly>%(AdditionalOpenTapPackage.UnpackOnly)</UnpackOnly>
      </OpenTapPackagesToInstall>
      <OpenTapPackagesToInstall Include="@(OpenTapPackageReference)">
        <Version>%(OpenTapPackageReference.Version)</Version>
        <Repository>%(OpenTapPackageReference.Repository)</Repository>
        <UnpackOnly>%(OpenTapPackageReference.UnpackOnly)</UnpackOnly>
      </OpenTapPackagesToInstall>
    </ItemGroup>
  </Target>

  <UsingTask TaskName="Keysight.OpenTap.Sdk.MSBuild.InstallOpenTapPackages" AssemblyFile="$(MSBuildThisFileDirectory)\Keysight.OpenTap.Sdk.MSBuild.dll"/>
  <Target Name="InstallOpenTapPackages"
          Inputs="@(OpenTapPackagesToInstall)"
          Outputs="$(OutDir).InstallRan"
          DependsOnTargets="CopyOpenTapPayloadFiles;ProcessOpenTapPackageList"
          BeforeTargets="Build">
    <InstallOpenTapPackages
      TapDir="$(OutDir)"
      PackagesToInstall="@(OpenTapPackagesToInstall)"
      Repositories="@(OpenTapPackageRepository)"
      SourceFile="$(MSBuildProjectFullPath)"
      PlatformTarget="$(PlatformTarget)"/>
    <Touch Files="$(OutDir).InstallRan" AlwaysCreate="true"/>
  </Target>

  <Target Name="VerifyInstalledPackages"
          DependsOnTargets="ProcessOpenTapPackageList"
          BeforeTargets="GenerateOpenTapReferenceProps">
    <ItemGroup>
      <PackageXmlFiles Include="@(OpenTapPackagesToInstall-> '$(OutDir)Packages/%(Identity)/package.xml')"/>
    </ItemGroup>
    <Error Condition="'@(PackageXmlFiles)' != '' AND !Exists('@(PackageXmlFiles)')" Text="Some packages failed to install."/>
  </Target>

  <UsingTask TaskName="Keysight.OpenTap.Sdk.MSBuild.AddAssemblyReferencesFromPackage" AssemblyFile="$(MSBuildThisFileDirectory)\Keysight.OpenTap.Sdk.MSBuild.dll"/>
  <Target Name="GenerateOpenTapReferenceProps"
          Inputs="$(MSBuildProjectFullPath);@(PackageXmlFiles)"
          Outputs="$(OpenTapAutogeneratedMsBuildReferenceFile)"
          DependsOnTargets="InstallOpenTapPackages;VerifyInstalledPackages" BeforeTargets="ResolveReferences;CoreCompile;ResolveAssemblyReferences">
    <ItemGroup>
      <OpenTapPackagesToReference Include="@(AdditionalOpenTapPackage->WithMetadataValue('Reference', 'true'))"/>
      <OpenTapPackagesToReference Include="@(OpenTapPackageReference)" Exclude="@(OpenTapPackageReference->WithMetadataValue('Reference', 'false'))"/>
    </ItemGroup>
    <AddAssemblyReferencesFromPackage PackageInstallDir="$(OutDir)"
                                      SourceFile="$(MSBuildProjectFullPath)"
                                      OpenTapPackagesToReference="@(OpenTapPackagesToReference)"
                                      TargetMsBuildFile="$(OpenTapAutogeneratedMsBuildReferenceFile)">
      <Output TaskParameter="Assemblies" ItemName="_OpenTapPackagesReferences"/>
    </AddAssemblyReferencesFromPackage>
    <Touch Files="$(MSBuildThisFileFullPath)"/>
    <ItemGroup>
      <ReferencePathWithRefAssemblies Include="@(_OpenTapPackagesReferences-> '$(OutDir)%(Identity)')"/>
    </ItemGroup>
  </Target>
</Project>

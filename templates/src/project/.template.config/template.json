{
  "$schema": "http://json.schemastore.org/template",
  "author": "OpenTap.io",
  "classifications": [ "OpenTap", "Test", "Windows", "Linux", "MacOS", "Desktop" ],
  "identity": "OpenTap.Project",
  "name": "OpenTap project",
  "shortName": "opentap",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sources": [
    {
      "source": "./",
      "target": "./",
      "exclude": [
        "**/[Bb]in/**",
        "**/[Oo]bj/**",
        ".template.config/**/*"
      ],
      "modifiers": [
        {
          "condition": "(!CliAction)",
          "exclude": [
            "*CliAction.cs"
          ]
        },
        {
          "condition": "(!ComponentSettings)",
          "exclude": [
            "*ComponentSettings.cs"
          ]
        },
        {
          "condition": "(!DUT)",
          "exclude": [
            "*DUT.cs"
          ]
        },
        {
          "condition": "(!Instrument)",
          "exclude": [
            "*Instrument.cs"
          ]
        },
        {
          "condition": "(!ResultListener)",
          "exclude": [
            "*ResultListener.cs"
          ]
        },
        {
          "condition": "(!TestStep)",
          "exclude": [
            "*TestStep.cs"
          ]
        },
        {
          "condition": "(TUIRegex)",
          "rename": {
            "TUI.LaunchSettings.json": "LaunchSettings.json",
            "TUI.Launch.json": "Launch.json"
          }
        },
        {
          "condition": "(!TUIRegex)",
          "exclude": [ "**/TUI.*" ]
        },
        {
          "condition": "(EditorRegex || EditorCERegex)",
          "rename": {
            "Editor.LaunchSettings.json": "LaunchSettings.json",
            "Editor.Launch.json": "Launch.json"
          }
        },
        {
          "condition": "(!EditorRegex && !EditorCERegex)",
          "exclude": [ "**/Editor.*" ]
        }
      ]
    }
  ],
  "sourceName": "ProjectName",
  "defaultName": "MyOpentapProject",
  "preferNameDirectory": true,

  "symbols": {
    "CliAction": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Include a CliAction in the project."
    },
    "ComponentSettings": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Include a ComponentSettings in the project."
    },
    "DUT": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Include a DUT in the project."
    },
    "Instrument": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Include a Instrument in the project."
    },
    "ResultListener": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "false",
      "description": "Include a ResultListener in the project."
    },
    "TestStep": {
      "type": "parameter",
      "dataType": "bool",
      "defaultValue": "true",
      "description": "Include a TestStep in the project."
    },
    "Editor": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "TUI",
      "replaces": "Editor",
      "description": "The default editor to debug with.",
      "choices": [
        {
          "choice": "TUI",
          "displayName": "OpenTAP TUI",
          "description": "Set TUI (Terminal User Interface) as the debugging editor."
        },
        {
          "choice": "Editor",
          "displayName": "Keysight Test Automation",
          "description": "This is not implemented yet."
        },
        {
          "choice": "EditorCE",
          "displayName": "Keysight Test Automation - Community Edition",
          "description": "This is not implemented yet."
        }
      ]
    },
    "TUIRegex": {
      "type": "generated",
      "generator": "regexMatch",
      "dataType": "bool",
      "parameters": {
        "source": "Editor",
        "pattern": "TUI"
      }
    },
    "EditorRegex": {
      "type": "generated",
      "generator": "regexMatch",
      "dataType": "bool",
      "parameters": {
        "source": "Editor",
        "pattern": "Editor"
      }
    },
    "EditorCERegex": {
      "type": "generated",
      "generator": "regexMatch",
      "dataType": "bool",
      "parameters": {
        "source": "Editor",
        "pattern": "Editor CE"
      }
    }
  }
}
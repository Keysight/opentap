<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <!-- We are debugging using NET Framework, but builds to Netstandard in release mode to ensure cross platform compatibility -->
    <!-- If your plugin is Windows only and you use Windows specific API's, feel free to change "netstandard2.0" below to "net462" and everything will work as when you are debugging. In this case, remember to change "OS" in package.xml to only "windows" -->
    <!-- If your plugin should be cross platform but does not build in release mode, please verify that all API's you used are available. You might need references or nuget packages for API's that are available in NET framework, but not in NetStandard -->
    <OpenTapPackageDefinitionPath>package.xml</OpenTapPackageDefinitionPath>
    <AssemblyName>OpenTap.Plugins.PluginDevelopment</AssemblyName>
    <RootNamespace>OpenTap.Plugins.PluginDevelopment</RootNamespace>
    <Configurations>Release;DebugEditorCE;DebugTUI;DebugEditor</Configurations>
    <Platforms>AnyCPU</Platforms>
  </PropertyGroup>

  <ItemGroup Condition="'$(Configuration)'=='DebugEditorCE'">
	<AdditionalOpenTapPackage Include="Developer's System CE" />
  </ItemGroup>
  <ItemGroup Condition="'$(Configuration)'=='DebugEditor'">
    <AdditionalOpenTapPackage Include="Developer's System" />
  </ItemGroup>
  <ItemGroup Condition="'$(Configuration)'=='DebugTUI'">
    <AdditionalOpenTapPackage Include="TUI" Version="beta" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.IO.Packaging" Version="4.7.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="GUI\SomeInstrument.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!-- Copy the launch json based on the currently selected configuration.
  this should only be done for these examples -->
  <Target Name="CleanLaunchSettings" AfterTargets="Clean">
    <Message Importance="high" Text="Deleting launchSettings.json..." />
    <Delete Files="Properties/launchSettings.json" />
  </Target>

  <Target Name="CopyLaunchSettings" AfterTargets="Build" Inputs="Properties/launchSettings.$(Configuration).json" Outputs="Properties/launchSettings.json">
    <Message Importance="high" Text="Copying launchSettings.$(Configuration).json..." />
    <Copy SourceFiles="Properties/launchSettings.$(Configuration).json" DestinationFiles="Properties/launchSettings.json" />
  </Target>

</Project>

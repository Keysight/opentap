name: CI

on: [push]

jobs:
  GetVersion:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      AssemblyVersion: ${{ steps.asmVer.outputs.ver }}
      GitVersion: ${{ steps.gitVer.outputs.ver }}
    steps:
      - name: Install OpenTAP
        run: |
          wget -O opentap.tar https://www.opentap.io/docs/OpenTAP.9.16.2+f3c96b9f.tar
          tar -xf opentap.tar
          chmod u+x INSTALL.sh
          echo 'y' | ./INSTALL.sh
          ln -s -f "$HOME/.tap/tap" /usr/local/bin/tap
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: tap sdk gitversion --fields 3
        id: asmVer
        run: echo ::set-output name=ver::`tap sdk gitversion --fields 3`
      - name: tap sdk gitversion
        id: gitVer
        run: echo ::set-output name=ver::$(tap sdk gitversion)
      - run: $HOME/bin/tap sdk gitversion
      - run: echo $(tap sdk gitversion)
      - name: Print
        run: echo ${{ steps.gitVer.outputs.ver }}

  ##############
  ### BUILDS ###
  ##############
  Build-DevGuide:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/opentap/buildrunners/documentationgeneration:latest
      credentials:
        username: github
        password: ${{ secrets.GITLAB_REGISTRY_TOKEN}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: tap generate-pdf "doc/Developer Guide/Readme.md" --toc --skip-first-file --out "sdk/Examples/OpenTAP Developer Guide.pdf" --frontpage "doc/Developer Guide/Frontpage.html" --frontpage-file "doc/Developer Guide/Frontpage.png"
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: doc-devguide
          retention-days: 5
          path: |
            sdk/Examples/OpenTAP Developer Guide.pdf

  Build-ApiDoc:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/opentap/buildrunners/doxygen:latest
      credentials:
        username: github
        password: ${{ secrets.GITLAB_REGISTRY_TOKEN}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: |
          mkdir Help API
          ver=$(grep ^version .gitversion | sed 's/version[ ]*=[ ]*//' | cut -d. -f 1-2)
          sed -i "s/\$(GitVersion)/$ver/" "doc/API Documentation/Doxyfile"
          rootdir=`pwd`
          cd "doc/API Documentation"
          doxygen Doxyfile
          cd apiref/html
          chmcmd index.hhp
          mv OpenTapApiReference.chm $rootdir/Help/
          cp -r . $rootdir/API/
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: doc-api
          retention-days: 5
          path: |
            Help/OpenTapApiReference.chm
            API

  Build-Linux:
    runs-on: ubuntu-latest
    container:
      #image: mcr.microsoft.com/dotnet/sdk:6.0-bullseye-slim
      image: mcr.microsoft.com/dotnet/sdk:6.0-focal
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - name: Restore dependencies
      #   run: dotnet restore -c Release OpenTAP.sln
      # - name: Build
      #   run: dotnet build --no-restore -c Release OpenTAP.sln
      # - name: Test
      #   run: dotnet test --no-build --verbosity normal
      - name: Build
        run: dotnet publish -c Release OpenTAP.sln
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: linux-x64-bin
          retention-days: 5
          path: |
            bin/Release/publish/*

  Build-Win:
    runs-on: windows-2019
    strategy:
      matrix:
        Architecture: [x86, x64]
    needs: GetVersion
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Stamp Version
        run: |
          $AssemblyVersion = "`"${{needs.GetVersion.outputs.AssemblyVersion}}.0`""
          $GitVersion = "`"${{needs.GetVersion.outputs.GitVersion}}`""
          Push-Location ./tap/Properties
          $AssemblyInfoFile = (Get-Content AssemblyInfo.cs.Template)
          $AssemblyInfoFile = ($AssemblyInfoFile) -replace '"AssemblyVersion"', $AssemblyVersion
          $AssemblyInfoFile = ($AssemblyInfoFile) -replace '"AssemblyFileVersion"', $AssemblyVersion
          $AssemblyInfoFile = ($AssemblyInfoFile) -replace '"AssemblyInformationalVersion"', $GitVersion
          $AssemblyInfoFile | Set-Content AssemblyInfo.cs
          cat AssemblyInfo.cs
          Pop-Location
      - name: Build
        run: |
          dotnet build -c Release /p:Platform=${{ matrix.Architecture }}
          dotnet build tap/tap.csproj -c Release /p:Platform=${{ matrix.Architecture }}
          get-content ./bin/Release/tap.runtimeconfig.json
          Remove-Item -recurse "bin\Release\Packages"
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: win-${{ matrix.Architecture }}-bin
          retention-days: 5
          path: |
            bin/Release/*

  ##############
  ### TESTS ###
  ##############
  TestEngine:
    runs-on: windows-2022
    needs: Build-Win
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: win-x64-bin
          path: bin/
      - name: Test
        run: |
          $ErrorActionPreference = "Stop"
          dotnet vstest bin/OpenTap.UnitTests.dll --logger:"console;verbosity=detailed" -- RunConfiguration.TestSessionTimeout=1200000
      - uses: actions/upload-artifact@v2
        with:
          name: win-testresults
          path: |
            TestResult.xml

  TestPackage:
    runs-on: windows-2022
    needs: Build-Win
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: win-x64-bin
          path: bin/
      - name: Test
        run: |
          $ErrorActionPreference = "Stop"
          Copy-Item -r "Package.UnitTests/Packages" bin
          Copy-Item .\bin\runtimes\win-x64\native\git2-4aecb64.dll .\bin
          dotnet vstest bin/OpenTap.Package.UnitTests.dll --logger:"console;verbosity=detailed"
      - uses: actions/upload-artifact@v2
        with:
          name: win-testresults
          path: |
            TestResult.xml

  TestWindowsPlan:
    runs-on: windows-2022
    needs: Build-Win
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: win-x64-bin
          path: bin/Release/
      - name: Test
        run: bin/Release/tap.exe run tests/regression.TapPlan --verbose

  TestLinuxPlan:
    runs-on: ubuntu-20.04
    needs: Build-Win
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: linux-x64-bin
          path: bin/Release/
      - name: Test
        run: bin/Release/tap run tests/regression.TapPlan --verbose

  ###############
  ### Package ###
  ###############
  Package-SDK:
    runs-on: windows-2022
    needs:
      - Build-Win
      - Build-DevGuide
      - Build-ApiDoc
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: win-x64-bin
          path: bin/Release/
      - name: Download Developer Guide
        uses: actions/download-artifact@v2
        with:
          name: doc-devguide
          path: /sdk/Examples/
      - name: Download API Reference
        uses: actions/download-artifact@v2
        with:
          name: doc-api
          path: /
      - name: Test
        run: |
          Set-Content .\opentap.x86.package.xml  -Value (get-content .\opentap.x86.package.xml | Select-String -Pattern '<Sign Certificate' -NotMatch)
          cd bin/Release
          cp .\runtimes\win-x64\native\git2-4aecb64.dll .
          .\tap.exe package create ../../opentap.x86.package.xml --install -v
          Copy-Item "../../sdk/Examples" "Packages/SDK/Examples" -Recurse
          Copy-Item "../../Package/PackageSchema.xsd" "Packages/SDK/PackageSchema.xsd"
          cd Packages/SDK/Examples
          $doc = New-Object System.Xml.XmlDataDocument
          $doc.PreserveWhitespace=1
          $doc.Load("$pwd/Directory.Build.props")
          $ele = $doc.GetElementsByTagName("PropertyGroup") | Where-Object { $_.GetElementsByTagName("GitVersion").Count -gt 0 }
          $doc.FirstChild.RemoveChild($ele) # First Child is the Project element
          $doc.Save("$pwd/Directory.Build.props")
          cd ../../..
          ./tap sdk gitversion --fields 4 --replace "Packages/SDK/Examples/Directory.Build.props"
          ./tap package create -v ../../sdk/sdk.package.xml
          Move-Item "*.TapPackage" "../.."
      - uses: actions/upload-artifact@v2
        with:
          name: package-sdk
          retention-days: 14
          path: |
            SDK.*.TapPackage
